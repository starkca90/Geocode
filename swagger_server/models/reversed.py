# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.source import Source  # noqa: F401,E501
from swagger_server import util


class Reversed(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, source: Source=None, house_number: str=None, street_name: str=None, community_name: str=None, state: str=None, zip_code: str=None, country_code: str=None):  # noqa: E501
        """Reversed - a model defined in Swagger

        :param source: The source of this Reversed.  # noqa: E501
        :type source: Source
        :param house_number: The house_number of this Reversed.  # noqa: E501
        :type house_number: str
        :param street_name: The street_name of this Reversed.  # noqa: E501
        :type street_name: str
        :param community_name: The community_name of this Reversed.  # noqa: E501
        :type community_name: str
        :param state: The state of this Reversed.  # noqa: E501
        :type state: str
        :param zip_code: The zip_code of this Reversed.  # noqa: E501
        :type zip_code: str
        :param country_code: The country_code of this Reversed.  # noqa: E501
        :type country_code: str
        """
        self.swagger_types = {
            'source': Source,
            'house_number': str,
            'street_name': str,
            'community_name': str,
            'state': str,
            'zip_code': str,
            'country_code': str
        }

        self.attribute_map = {
            'source': 'source',
            'house_number': 'house_number',
            'street_name': 'street_name',
            'community_name': 'community_name',
            'state': 'state',
            'zip_code': 'zip_code',
            'country_code': 'country_code'
        }
        self._source = source
        self._house_number = house_number
        self._street_name = street_name
        self._community_name = community_name
        self._state = state
        self._zip_code = zip_code
        self._country_code = country_code

    @classmethod
    def from_dict(cls, dikt) -> 'Reversed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Reversed of this Reversed.  # noqa: E501
        :rtype: Reversed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self) -> Source:
        """Gets the source of this Reversed.


        :return: The source of this Reversed.
        :rtype: Source
        """
        return self._source

    @source.setter
    def source(self, source: Source):
        """Sets the source of this Reversed.


        :param source: The source of this Reversed.
        :type source: Source
        """

        self._source = source

    @property
    def house_number(self) -> str:
        """Gets the house_number of this Reversed.


        :return: The house_number of this Reversed.
        :rtype: str
        """
        return self._house_number

    @house_number.setter
    def house_number(self, house_number: str):
        """Sets the house_number of this Reversed.


        :param house_number: The house_number of this Reversed.
        :type house_number: str
        """

        self._house_number = house_number

    @property
    def street_name(self) -> str:
        """Gets the street_name of this Reversed.


        :return: The street_name of this Reversed.
        :rtype: str
        """
        return self._street_name

    @street_name.setter
    def street_name(self, street_name: str):
        """Sets the street_name of this Reversed.


        :param street_name: The street_name of this Reversed.
        :type street_name: str
        """

        self._street_name = street_name

    @property
    def community_name(self) -> str:
        """Gets the community_name of this Reversed.


        :return: The community_name of this Reversed.
        :rtype: str
        """
        return self._community_name

    @community_name.setter
    def community_name(self, community_name: str):
        """Sets the community_name of this Reversed.


        :param community_name: The community_name of this Reversed.
        :type community_name: str
        """

        self._community_name = community_name

    @property
    def state(self) -> str:
        """Gets the state of this Reversed.


        :return: The state of this Reversed.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """Sets the state of this Reversed.


        :param state: The state of this Reversed.
        :type state: str
        """

        self._state = state

    @property
    def zip_code(self) -> str:
        """Gets the zip_code of this Reversed.


        :return: The zip_code of this Reversed.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code: str):
        """Sets the zip_code of this Reversed.


        :param zip_code: The zip_code of this Reversed.
        :type zip_code: str
        """

        self._zip_code = zip_code

    @property
    def country_code(self) -> str:
        """Gets the country_code of this Reversed.


        :return: The country_code of this Reversed.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code: str):
        """Sets the country_code of this Reversed.


        :param country_code: The country_code of this Reversed.
        :type country_code: str
        """

        self._country_code = country_code
